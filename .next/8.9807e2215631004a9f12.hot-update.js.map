{"version":3,"sources":["webpack:///./components/Audio.js?b7d5"],"names":["PLAYER_SIZE","Player","styled","button","props","isPlaying","Audio","state","_handleClick","setState","lang","el"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA,IAAMA,cAAc,EAApB;;AAEA,IAAMC,SAAS,kEAAAC,CAAOC,MAAhB;AAAA;AAAA;AAAA,oOAGMH,WAHN,EAUKA,WAVL,EAWMA,WAXN,EAYeA,WAZf,EAYgCA,WAZhC,EAgBoB,UAACI,KAAD;AAAA,SACtBA,MAAMC,SAAN,GACI,4BADJ,GAEI,yBAHkB;AAAA,CAhBpB,CAAN;;IAsBqBC,K;;;;;;;;;;;;;;oLACnBC,K,GAAQ;AACNF,iBAAW;AADL,K,QAIRG,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAc,EAAEJ,WAAW,CAAC,MAAKE,KAAL,CAAWF,SAAzB,EAAd;AACD,K;;;;;6BAEQ;AAAA;;AAAA,UACCK,IADD,GACU,KAAKN,KADf,CACCM,IADD;AAAA,UAECL,SAFD,GAEe,KAAKE,KAFpB,CAECF,SAFD;;AAGP,aACE;AAAC,uDAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,oEAAC,MAAD,IAAQ,WAAWA,SAAnB,EAA8B,SAAS,KAAKG,YAA5C;AAAA;AAAA;AAAA;AAAA,UADF;AAGE;AAAA;AAAA;AACE,sBAAS,EADX;AAEE,iBAAK,aAACG,EAAD,EAAQ;AACX,qBAAKA,EAAL,GAAUA,EAAV;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAME;AACE,0CAA4BD,IAA5B,SADF;AAEE,kBAAK,0BAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAHF,OADF;AAiBD;;;;;;;;;EA7BgC,gD;;eAAdJ,K;;;;;;;;;;;;;0BAxBfN,W;0BAEAC,M;0BAsBeK,K","file":"8.9807e2215631004a9f12.hot-update.js","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst PLAYER_SIZE = 30;\n\nconst Player = styled.button`\n  position: absolute;\n  top: 0;\n  right: -${PLAYER_SIZE}px;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: none;\n  background-color: transparent;\n  cursor: pointer;\n  width: ${PLAYER_SIZE}px;\n  height: ${PLAYER_SIZE}px;\n  background-size: ${PLAYER_SIZE}px ${PLAYER_SIZE}px;\n\n  color: white;\n\n  background-image: url(${(props) =>\n    props.isPlaying\n      ? \"/static/assets/playing.svg\"\n      : \"/static/assets/play.svg\"});\n`;\n\nexport default class Audio extends Component {\n  state = {\n    isPlaying: false,\n  };\n\n  _handleClick = () => {\n    this.setState({ isPlaying: !this.state.isPlaying });\n  };\n\n  render() {\n    const { lang } = this.props;\n    const { isPlaying } = this.state;\n    return (\n      <Fragment>\n        <Player isPlaying={isPlaying} onClick={this._handleClick} />\n\n        <audio\n          controls=\"\"\n          ref={(el) => {\n            this.el = el;\n          }}\n        >\n          <source\n            src={`static/assets/audio/${lang}.ogg`}\n            type=\"audio/ogg; codecs=vorbis\"\n          />\n        </audio>\n      </Fragment>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/Audio.js"],"sourceRoot":""}